/* 
 * SimScale API
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using OpenAPIDateConverter = SimScale.Sdk.Client.OpenAPIDateConverter;

namespace SimScale.Sdk.Model
{
    /// <summary>
    /// FluidSolvers
    /// </summary>
    [DataContract]
    public partial class FluidSolvers : IEquatable<FluidSolvers>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FluidSolvers" /> class.
        /// </summary>
        /// <param name="phaseFractionSolver">phaseFractionSolver.</param>
        /// <param name="velocitySolver">velocitySolver.</param>
        /// <param name="velocityFinalSolver">velocityFinalSolver.</param>
        /// <param name="densitySolver">densitySolver.</param>
        /// <param name="densityFinalSolver">densityFinalSolver.</param>
        /// <param name="pressureSolver">pressureSolver.</param>
        /// <param name="pressureFinalSolver">pressureFinalSolver.</param>
        /// <param name="temperatureSolver">temperatureSolver.</param>
        /// <param name="temperatureFinalSolver">temperatureFinalSolver.</param>
        /// <param name="pressureRghSolver">pressureRghSolver.</param>
        /// <param name="pressureRghFinalSolver">pressureRghFinalSolver.</param>
        /// <param name="solidEnthalpySolver">solidEnthalpySolver.</param>
        /// <param name="solidEnthalpyFinalSolver">solidEnthalpyFinalSolver.</param>
        /// <param name="enthalpySolver">enthalpySolver.</param>
        /// <param name="enthalpyFinalSolver">enthalpyFinalSolver.</param>
        /// <param name="internalEnergySolver">internalEnergySolver.</param>
        /// <param name="internalEnergyFinalSolver">internalEnergyFinalSolver.</param>
        /// <param name="turbulentKineticEnergySolver">turbulentKineticEnergySolver.</param>
        /// <param name="turbulentKineticEnergyFinalSolver">turbulentKineticEnergyFinalSolver.</param>
        /// <param name="nuTildaSolver">nuTildaSolver.</param>
        /// <param name="nuTildaFinalSolver">nuTildaFinalSolver.</param>
        /// <param name="omegaDissipationRateSolver">omegaDissipationRateSolver.</param>
        /// <param name="omegaDissipationRateFinalSolver">omegaDissipationRateFinalSolver.</param>
        /// <param name="epsilonDissipationRateSolver">epsilonDissipationRateSolver.</param>
        /// <param name="epsilonDissipationRateFinalSolver">epsilonDissipationRateFinalSolver.</param>
        /// <param name="passiveScalarSolver">passiveScalarSolver.</param>
        /// <param name="radiativeIntensityRaySolver">radiativeIntensityRaySolver.</param>
        public FluidSolvers(MULESSolver phaseFractionSolver = default(MULESSolver), OneOfFluidSolversVelocitySolver velocitySolver = default(OneOfFluidSolversVelocitySolver), OneOfFluidSolversVelocityFinalSolver velocityFinalSolver = default(OneOfFluidSolversVelocityFinalSolver), OneOfFluidSolversDensitySolver densitySolver = default(OneOfFluidSolversDensitySolver), OneOfFluidSolversDensityFinalSolver densityFinalSolver = default(OneOfFluidSolversDensityFinalSolver), OneOfFluidSolversPressureSolver pressureSolver = default(OneOfFluidSolversPressureSolver), OneOfFluidSolversPressureFinalSolver pressureFinalSolver = default(OneOfFluidSolversPressureFinalSolver), OneOfFluidSolversTemperatureSolver temperatureSolver = default(OneOfFluidSolversTemperatureSolver), OneOfFluidSolversTemperatureFinalSolver temperatureFinalSolver = default(OneOfFluidSolversTemperatureFinalSolver), OneOfFluidSolversPressureRghSolver pressureRghSolver = default(OneOfFluidSolversPressureRghSolver), OneOfFluidSolversPressureRghFinalSolver pressureRghFinalSolver = default(OneOfFluidSolversPressureRghFinalSolver), OneOfFluidSolversSolidEnthalpySolver solidEnthalpySolver = default(OneOfFluidSolversSolidEnthalpySolver), OneOfFluidSolversSolidEnthalpyFinalSolver solidEnthalpyFinalSolver = default(OneOfFluidSolversSolidEnthalpyFinalSolver), OneOfFluidSolversEnthalpySolver enthalpySolver = default(OneOfFluidSolversEnthalpySolver), OneOfFluidSolversEnthalpyFinalSolver enthalpyFinalSolver = default(OneOfFluidSolversEnthalpyFinalSolver), OneOfFluidSolversInternalEnergySolver internalEnergySolver = default(OneOfFluidSolversInternalEnergySolver), OneOfFluidSolversInternalEnergyFinalSolver internalEnergyFinalSolver = default(OneOfFluidSolversInternalEnergyFinalSolver), OneOfFluidSolversTurbulentKineticEnergySolver turbulentKineticEnergySolver = default(OneOfFluidSolversTurbulentKineticEnergySolver), OneOfFluidSolversTurbulentKineticEnergyFinalSolver turbulentKineticEnergyFinalSolver = default(OneOfFluidSolversTurbulentKineticEnergyFinalSolver), OneOfFluidSolversNuTildaSolver nuTildaSolver = default(OneOfFluidSolversNuTildaSolver), OneOfFluidSolversNuTildaFinalSolver nuTildaFinalSolver = default(OneOfFluidSolversNuTildaFinalSolver), OneOfFluidSolversOmegaDissipationRateSolver omegaDissipationRateSolver = default(OneOfFluidSolversOmegaDissipationRateSolver), OneOfFluidSolversOmegaDissipationRateFinalSolver omegaDissipationRateFinalSolver = default(OneOfFluidSolversOmegaDissipationRateFinalSolver), OneOfFluidSolversEpsilonDissipationRateSolver epsilonDissipationRateSolver = default(OneOfFluidSolversEpsilonDissipationRateSolver), OneOfFluidSolversEpsilonDissipationRateFinalSolver epsilonDissipationRateFinalSolver = default(OneOfFluidSolversEpsilonDissipationRateFinalSolver), OneOfFluidSolversPassiveScalarSolver passiveScalarSolver = default(OneOfFluidSolversPassiveScalarSolver), OneOfFluidSolversRadiativeIntensityRaySolver radiativeIntensityRaySolver = default(OneOfFluidSolversRadiativeIntensityRaySolver))
        {
            this.PhaseFractionSolver = phaseFractionSolver;
            this.VelocitySolver = velocitySolver;
            this.VelocityFinalSolver = velocityFinalSolver;
            this.DensitySolver = densitySolver;
            this.DensityFinalSolver = densityFinalSolver;
            this.PressureSolver = pressureSolver;
            this.PressureFinalSolver = pressureFinalSolver;
            this.TemperatureSolver = temperatureSolver;
            this.TemperatureFinalSolver = temperatureFinalSolver;
            this.PressureRghSolver = pressureRghSolver;
            this.PressureRghFinalSolver = pressureRghFinalSolver;
            this.SolidEnthalpySolver = solidEnthalpySolver;
            this.SolidEnthalpyFinalSolver = solidEnthalpyFinalSolver;
            this.EnthalpySolver = enthalpySolver;
            this.EnthalpyFinalSolver = enthalpyFinalSolver;
            this.InternalEnergySolver = internalEnergySolver;
            this.InternalEnergyFinalSolver = internalEnergyFinalSolver;
            this.TurbulentKineticEnergySolver = turbulentKineticEnergySolver;
            this.TurbulentKineticEnergyFinalSolver = turbulentKineticEnergyFinalSolver;
            this.NuTildaSolver = nuTildaSolver;
            this.NuTildaFinalSolver = nuTildaFinalSolver;
            this.OmegaDissipationRateSolver = omegaDissipationRateSolver;
            this.OmegaDissipationRateFinalSolver = omegaDissipationRateFinalSolver;
            this.EpsilonDissipationRateSolver = epsilonDissipationRateSolver;
            this.EpsilonDissipationRateFinalSolver = epsilonDissipationRateFinalSolver;
            this.PassiveScalarSolver = passiveScalarSolver;
            this.RadiativeIntensityRaySolver = radiativeIntensityRaySolver;
        }
        
        /// <summary>
        /// Gets or Sets PhaseFractionSolver
        /// </summary>
        [DataMember(Name="phaseFractionSolver", EmitDefaultValue=false)]
        public MULESSolver PhaseFractionSolver { get; set; }

        /// <summary>
        /// Gets or Sets VelocitySolver
        /// </summary>
        [DataMember(Name="velocitySolver", EmitDefaultValue=false)]
        public OneOfFluidSolversVelocitySolver VelocitySolver { get; set; }

        /// <summary>
        /// Gets or Sets VelocityFinalSolver
        /// </summary>
        [DataMember(Name="velocityFinalSolver", EmitDefaultValue=false)]
        public OneOfFluidSolversVelocityFinalSolver VelocityFinalSolver { get; set; }

        /// <summary>
        /// Gets or Sets DensitySolver
        /// </summary>
        [DataMember(Name="densitySolver", EmitDefaultValue=false)]
        public OneOfFluidSolversDensitySolver DensitySolver { get; set; }

        /// <summary>
        /// Gets or Sets DensityFinalSolver
        /// </summary>
        [DataMember(Name="densityFinalSolver", EmitDefaultValue=false)]
        public OneOfFluidSolversDensityFinalSolver DensityFinalSolver { get; set; }

        /// <summary>
        /// Gets or Sets PressureSolver
        /// </summary>
        [DataMember(Name="pressureSolver", EmitDefaultValue=false)]
        public OneOfFluidSolversPressureSolver PressureSolver { get; set; }

        /// <summary>
        /// Gets or Sets PressureFinalSolver
        /// </summary>
        [DataMember(Name="pressureFinalSolver", EmitDefaultValue=false)]
        public OneOfFluidSolversPressureFinalSolver PressureFinalSolver { get; set; }

        /// <summary>
        /// Gets or Sets TemperatureSolver
        /// </summary>
        [DataMember(Name="temperatureSolver", EmitDefaultValue=false)]
        public OneOfFluidSolversTemperatureSolver TemperatureSolver { get; set; }

        /// <summary>
        /// Gets or Sets TemperatureFinalSolver
        /// </summary>
        [DataMember(Name="temperatureFinalSolver", EmitDefaultValue=false)]
        public OneOfFluidSolversTemperatureFinalSolver TemperatureFinalSolver { get; set; }

        /// <summary>
        /// Gets or Sets PressureRghSolver
        /// </summary>
        [DataMember(Name="pressureRghSolver", EmitDefaultValue=false)]
        public OneOfFluidSolversPressureRghSolver PressureRghSolver { get; set; }

        /// <summary>
        /// Gets or Sets PressureRghFinalSolver
        /// </summary>
        [DataMember(Name="pressureRghFinalSolver", EmitDefaultValue=false)]
        public OneOfFluidSolversPressureRghFinalSolver PressureRghFinalSolver { get; set; }

        /// <summary>
        /// Gets or Sets SolidEnthalpySolver
        /// </summary>
        [DataMember(Name="solidEnthalpySolver", EmitDefaultValue=false)]
        public OneOfFluidSolversSolidEnthalpySolver SolidEnthalpySolver { get; set; }

        /// <summary>
        /// Gets or Sets SolidEnthalpyFinalSolver
        /// </summary>
        [DataMember(Name="solidEnthalpyFinalSolver", EmitDefaultValue=false)]
        public OneOfFluidSolversSolidEnthalpyFinalSolver SolidEnthalpyFinalSolver { get; set; }

        /// <summary>
        /// Gets or Sets EnthalpySolver
        /// </summary>
        [DataMember(Name="enthalpySolver", EmitDefaultValue=false)]
        public OneOfFluidSolversEnthalpySolver EnthalpySolver { get; set; }

        /// <summary>
        /// Gets or Sets EnthalpyFinalSolver
        /// </summary>
        [DataMember(Name="enthalpyFinalSolver", EmitDefaultValue=false)]
        public OneOfFluidSolversEnthalpyFinalSolver EnthalpyFinalSolver { get; set; }

        /// <summary>
        /// Gets or Sets InternalEnergySolver
        /// </summary>
        [DataMember(Name="internalEnergySolver", EmitDefaultValue=false)]
        public OneOfFluidSolversInternalEnergySolver InternalEnergySolver { get; set; }

        /// <summary>
        /// Gets or Sets InternalEnergyFinalSolver
        /// </summary>
        [DataMember(Name="internalEnergyFinalSolver", EmitDefaultValue=false)]
        public OneOfFluidSolversInternalEnergyFinalSolver InternalEnergyFinalSolver { get; set; }

        /// <summary>
        /// Gets or Sets TurbulentKineticEnergySolver
        /// </summary>
        [DataMember(Name="turbulentKineticEnergySolver", EmitDefaultValue=false)]
        public OneOfFluidSolversTurbulentKineticEnergySolver TurbulentKineticEnergySolver { get; set; }

        /// <summary>
        /// Gets or Sets TurbulentKineticEnergyFinalSolver
        /// </summary>
        [DataMember(Name="turbulentKineticEnergyFinalSolver", EmitDefaultValue=false)]
        public OneOfFluidSolversTurbulentKineticEnergyFinalSolver TurbulentKineticEnergyFinalSolver { get; set; }

        /// <summary>
        /// Gets or Sets NuTildaSolver
        /// </summary>
        [DataMember(Name="nuTildaSolver", EmitDefaultValue=false)]
        public OneOfFluidSolversNuTildaSolver NuTildaSolver { get; set; }

        /// <summary>
        /// Gets or Sets NuTildaFinalSolver
        /// </summary>
        [DataMember(Name="nuTildaFinalSolver", EmitDefaultValue=false)]
        public OneOfFluidSolversNuTildaFinalSolver NuTildaFinalSolver { get; set; }

        /// <summary>
        /// Gets or Sets OmegaDissipationRateSolver
        /// </summary>
        [DataMember(Name="omegaDissipationRateSolver", EmitDefaultValue=false)]
        public OneOfFluidSolversOmegaDissipationRateSolver OmegaDissipationRateSolver { get; set; }

        /// <summary>
        /// Gets or Sets OmegaDissipationRateFinalSolver
        /// </summary>
        [DataMember(Name="omegaDissipationRateFinalSolver", EmitDefaultValue=false)]
        public OneOfFluidSolversOmegaDissipationRateFinalSolver OmegaDissipationRateFinalSolver { get; set; }

        /// <summary>
        /// Gets or Sets EpsilonDissipationRateSolver
        /// </summary>
        [DataMember(Name="epsilonDissipationRateSolver", EmitDefaultValue=false)]
        public OneOfFluidSolversEpsilonDissipationRateSolver EpsilonDissipationRateSolver { get; set; }

        /// <summary>
        /// Gets or Sets EpsilonDissipationRateFinalSolver
        /// </summary>
        [DataMember(Name="epsilonDissipationRateFinalSolver", EmitDefaultValue=false)]
        public OneOfFluidSolversEpsilonDissipationRateFinalSolver EpsilonDissipationRateFinalSolver { get; set; }

        /// <summary>
        /// Gets or Sets PassiveScalarSolver
        /// </summary>
        [DataMember(Name="passiveScalarSolver", EmitDefaultValue=false)]
        public OneOfFluidSolversPassiveScalarSolver PassiveScalarSolver { get; set; }

        /// <summary>
        /// Gets or Sets RadiativeIntensityRaySolver
        /// </summary>
        [DataMember(Name="radiativeIntensityRaySolver", EmitDefaultValue=false)]
        public OneOfFluidSolversRadiativeIntensityRaySolver RadiativeIntensityRaySolver { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class FluidSolvers {\n");
            sb.Append("  PhaseFractionSolver: ").Append(PhaseFractionSolver).Append("\n");
            sb.Append("  VelocitySolver: ").Append(VelocitySolver).Append("\n");
            sb.Append("  VelocityFinalSolver: ").Append(VelocityFinalSolver).Append("\n");
            sb.Append("  DensitySolver: ").Append(DensitySolver).Append("\n");
            sb.Append("  DensityFinalSolver: ").Append(DensityFinalSolver).Append("\n");
            sb.Append("  PressureSolver: ").Append(PressureSolver).Append("\n");
            sb.Append("  PressureFinalSolver: ").Append(PressureFinalSolver).Append("\n");
            sb.Append("  TemperatureSolver: ").Append(TemperatureSolver).Append("\n");
            sb.Append("  TemperatureFinalSolver: ").Append(TemperatureFinalSolver).Append("\n");
            sb.Append("  PressureRghSolver: ").Append(PressureRghSolver).Append("\n");
            sb.Append("  PressureRghFinalSolver: ").Append(PressureRghFinalSolver).Append("\n");
            sb.Append("  SolidEnthalpySolver: ").Append(SolidEnthalpySolver).Append("\n");
            sb.Append("  SolidEnthalpyFinalSolver: ").Append(SolidEnthalpyFinalSolver).Append("\n");
            sb.Append("  EnthalpySolver: ").Append(EnthalpySolver).Append("\n");
            sb.Append("  EnthalpyFinalSolver: ").Append(EnthalpyFinalSolver).Append("\n");
            sb.Append("  InternalEnergySolver: ").Append(InternalEnergySolver).Append("\n");
            sb.Append("  InternalEnergyFinalSolver: ").Append(InternalEnergyFinalSolver).Append("\n");
            sb.Append("  TurbulentKineticEnergySolver: ").Append(TurbulentKineticEnergySolver).Append("\n");
            sb.Append("  TurbulentKineticEnergyFinalSolver: ").Append(TurbulentKineticEnergyFinalSolver).Append("\n");
            sb.Append("  NuTildaSolver: ").Append(NuTildaSolver).Append("\n");
            sb.Append("  NuTildaFinalSolver: ").Append(NuTildaFinalSolver).Append("\n");
            sb.Append("  OmegaDissipationRateSolver: ").Append(OmegaDissipationRateSolver).Append("\n");
            sb.Append("  OmegaDissipationRateFinalSolver: ").Append(OmegaDissipationRateFinalSolver).Append("\n");
            sb.Append("  EpsilonDissipationRateSolver: ").Append(EpsilonDissipationRateSolver).Append("\n");
            sb.Append("  EpsilonDissipationRateFinalSolver: ").Append(EpsilonDissipationRateFinalSolver).Append("\n");
            sb.Append("  PassiveScalarSolver: ").Append(PassiveScalarSolver).Append("\n");
            sb.Append("  RadiativeIntensityRaySolver: ").Append(RadiativeIntensityRaySolver).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as FluidSolvers);
        }

        /// <summary>
        /// Returns true if FluidSolvers instances are equal
        /// </summary>
        /// <param name="input">Instance of FluidSolvers to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(FluidSolvers input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.PhaseFractionSolver == input.PhaseFractionSolver ||
                    (this.PhaseFractionSolver != null &&
                    this.PhaseFractionSolver.Equals(input.PhaseFractionSolver))
                ) && 
                (
                    this.VelocitySolver == input.VelocitySolver ||
                    (this.VelocitySolver != null &&
                    this.VelocitySolver.Equals(input.VelocitySolver))
                ) && 
                (
                    this.VelocityFinalSolver == input.VelocityFinalSolver ||
                    (this.VelocityFinalSolver != null &&
                    this.VelocityFinalSolver.Equals(input.VelocityFinalSolver))
                ) && 
                (
                    this.DensitySolver == input.DensitySolver ||
                    (this.DensitySolver != null &&
                    this.DensitySolver.Equals(input.DensitySolver))
                ) && 
                (
                    this.DensityFinalSolver == input.DensityFinalSolver ||
                    (this.DensityFinalSolver != null &&
                    this.DensityFinalSolver.Equals(input.DensityFinalSolver))
                ) && 
                (
                    this.PressureSolver == input.PressureSolver ||
                    (this.PressureSolver != null &&
                    this.PressureSolver.Equals(input.PressureSolver))
                ) && 
                (
                    this.PressureFinalSolver == input.PressureFinalSolver ||
                    (this.PressureFinalSolver != null &&
                    this.PressureFinalSolver.Equals(input.PressureFinalSolver))
                ) && 
                (
                    this.TemperatureSolver == input.TemperatureSolver ||
                    (this.TemperatureSolver != null &&
                    this.TemperatureSolver.Equals(input.TemperatureSolver))
                ) && 
                (
                    this.TemperatureFinalSolver == input.TemperatureFinalSolver ||
                    (this.TemperatureFinalSolver != null &&
                    this.TemperatureFinalSolver.Equals(input.TemperatureFinalSolver))
                ) && 
                (
                    this.PressureRghSolver == input.PressureRghSolver ||
                    (this.PressureRghSolver != null &&
                    this.PressureRghSolver.Equals(input.PressureRghSolver))
                ) && 
                (
                    this.PressureRghFinalSolver == input.PressureRghFinalSolver ||
                    (this.PressureRghFinalSolver != null &&
                    this.PressureRghFinalSolver.Equals(input.PressureRghFinalSolver))
                ) && 
                (
                    this.SolidEnthalpySolver == input.SolidEnthalpySolver ||
                    (this.SolidEnthalpySolver != null &&
                    this.SolidEnthalpySolver.Equals(input.SolidEnthalpySolver))
                ) && 
                (
                    this.SolidEnthalpyFinalSolver == input.SolidEnthalpyFinalSolver ||
                    (this.SolidEnthalpyFinalSolver != null &&
                    this.SolidEnthalpyFinalSolver.Equals(input.SolidEnthalpyFinalSolver))
                ) && 
                (
                    this.EnthalpySolver == input.EnthalpySolver ||
                    (this.EnthalpySolver != null &&
                    this.EnthalpySolver.Equals(input.EnthalpySolver))
                ) && 
                (
                    this.EnthalpyFinalSolver == input.EnthalpyFinalSolver ||
                    (this.EnthalpyFinalSolver != null &&
                    this.EnthalpyFinalSolver.Equals(input.EnthalpyFinalSolver))
                ) && 
                (
                    this.InternalEnergySolver == input.InternalEnergySolver ||
                    (this.InternalEnergySolver != null &&
                    this.InternalEnergySolver.Equals(input.InternalEnergySolver))
                ) && 
                (
                    this.InternalEnergyFinalSolver == input.InternalEnergyFinalSolver ||
                    (this.InternalEnergyFinalSolver != null &&
                    this.InternalEnergyFinalSolver.Equals(input.InternalEnergyFinalSolver))
                ) && 
                (
                    this.TurbulentKineticEnergySolver == input.TurbulentKineticEnergySolver ||
                    (this.TurbulentKineticEnergySolver != null &&
                    this.TurbulentKineticEnergySolver.Equals(input.TurbulentKineticEnergySolver))
                ) && 
                (
                    this.TurbulentKineticEnergyFinalSolver == input.TurbulentKineticEnergyFinalSolver ||
                    (this.TurbulentKineticEnergyFinalSolver != null &&
                    this.TurbulentKineticEnergyFinalSolver.Equals(input.TurbulentKineticEnergyFinalSolver))
                ) && 
                (
                    this.NuTildaSolver == input.NuTildaSolver ||
                    (this.NuTildaSolver != null &&
                    this.NuTildaSolver.Equals(input.NuTildaSolver))
                ) && 
                (
                    this.NuTildaFinalSolver == input.NuTildaFinalSolver ||
                    (this.NuTildaFinalSolver != null &&
                    this.NuTildaFinalSolver.Equals(input.NuTildaFinalSolver))
                ) && 
                (
                    this.OmegaDissipationRateSolver == input.OmegaDissipationRateSolver ||
                    (this.OmegaDissipationRateSolver != null &&
                    this.OmegaDissipationRateSolver.Equals(input.OmegaDissipationRateSolver))
                ) && 
                (
                    this.OmegaDissipationRateFinalSolver == input.OmegaDissipationRateFinalSolver ||
                    (this.OmegaDissipationRateFinalSolver != null &&
                    this.OmegaDissipationRateFinalSolver.Equals(input.OmegaDissipationRateFinalSolver))
                ) && 
                (
                    this.EpsilonDissipationRateSolver == input.EpsilonDissipationRateSolver ||
                    (this.EpsilonDissipationRateSolver != null &&
                    this.EpsilonDissipationRateSolver.Equals(input.EpsilonDissipationRateSolver))
                ) && 
                (
                    this.EpsilonDissipationRateFinalSolver == input.EpsilonDissipationRateFinalSolver ||
                    (this.EpsilonDissipationRateFinalSolver != null &&
                    this.EpsilonDissipationRateFinalSolver.Equals(input.EpsilonDissipationRateFinalSolver))
                ) && 
                (
                    this.PassiveScalarSolver == input.PassiveScalarSolver ||
                    (this.PassiveScalarSolver != null &&
                    this.PassiveScalarSolver.Equals(input.PassiveScalarSolver))
                ) && 
                (
                    this.RadiativeIntensityRaySolver == input.RadiativeIntensityRaySolver ||
                    (this.RadiativeIntensityRaySolver != null &&
                    this.RadiativeIntensityRaySolver.Equals(input.RadiativeIntensityRaySolver))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PhaseFractionSolver != null)
                    hashCode = hashCode * 59 + this.PhaseFractionSolver.GetHashCode();
                if (this.VelocitySolver != null)
                    hashCode = hashCode * 59 + this.VelocitySolver.GetHashCode();
                if (this.VelocityFinalSolver != null)
                    hashCode = hashCode * 59 + this.VelocityFinalSolver.GetHashCode();
                if (this.DensitySolver != null)
                    hashCode = hashCode * 59 + this.DensitySolver.GetHashCode();
                if (this.DensityFinalSolver != null)
                    hashCode = hashCode * 59 + this.DensityFinalSolver.GetHashCode();
                if (this.PressureSolver != null)
                    hashCode = hashCode * 59 + this.PressureSolver.GetHashCode();
                if (this.PressureFinalSolver != null)
                    hashCode = hashCode * 59 + this.PressureFinalSolver.GetHashCode();
                if (this.TemperatureSolver != null)
                    hashCode = hashCode * 59 + this.TemperatureSolver.GetHashCode();
                if (this.TemperatureFinalSolver != null)
                    hashCode = hashCode * 59 + this.TemperatureFinalSolver.GetHashCode();
                if (this.PressureRghSolver != null)
                    hashCode = hashCode * 59 + this.PressureRghSolver.GetHashCode();
                if (this.PressureRghFinalSolver != null)
                    hashCode = hashCode * 59 + this.PressureRghFinalSolver.GetHashCode();
                if (this.SolidEnthalpySolver != null)
                    hashCode = hashCode * 59 + this.SolidEnthalpySolver.GetHashCode();
                if (this.SolidEnthalpyFinalSolver != null)
                    hashCode = hashCode * 59 + this.SolidEnthalpyFinalSolver.GetHashCode();
                if (this.EnthalpySolver != null)
                    hashCode = hashCode * 59 + this.EnthalpySolver.GetHashCode();
                if (this.EnthalpyFinalSolver != null)
                    hashCode = hashCode * 59 + this.EnthalpyFinalSolver.GetHashCode();
                if (this.InternalEnergySolver != null)
                    hashCode = hashCode * 59 + this.InternalEnergySolver.GetHashCode();
                if (this.InternalEnergyFinalSolver != null)
                    hashCode = hashCode * 59 + this.InternalEnergyFinalSolver.GetHashCode();
                if (this.TurbulentKineticEnergySolver != null)
                    hashCode = hashCode * 59 + this.TurbulentKineticEnergySolver.GetHashCode();
                if (this.TurbulentKineticEnergyFinalSolver != null)
                    hashCode = hashCode * 59 + this.TurbulentKineticEnergyFinalSolver.GetHashCode();
                if (this.NuTildaSolver != null)
                    hashCode = hashCode * 59 + this.NuTildaSolver.GetHashCode();
                if (this.NuTildaFinalSolver != null)
                    hashCode = hashCode * 59 + this.NuTildaFinalSolver.GetHashCode();
                if (this.OmegaDissipationRateSolver != null)
                    hashCode = hashCode * 59 + this.OmegaDissipationRateSolver.GetHashCode();
                if (this.OmegaDissipationRateFinalSolver != null)
                    hashCode = hashCode * 59 + this.OmegaDissipationRateFinalSolver.GetHashCode();
                if (this.EpsilonDissipationRateSolver != null)
                    hashCode = hashCode * 59 + this.EpsilonDissipationRateSolver.GetHashCode();
                if (this.EpsilonDissipationRateFinalSolver != null)
                    hashCode = hashCode * 59 + this.EpsilonDissipationRateFinalSolver.GetHashCode();
                if (this.PassiveScalarSolver != null)
                    hashCode = hashCode * 59 + this.PassiveScalarSolver.GetHashCode();
                if (this.RadiativeIntensityRaySolver != null)
                    hashCode = hashCode * 59 + this.RadiativeIntensityRaySolver.GetHashCode();
                return hashCode;
            }
        }

    }

}
