/* 
 * SimScale API
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using OpenAPIDateConverter = SimScale.Sdk.Client.OpenAPIDateConverter;

namespace SimScale.Sdk.Model
{
    /// <summary>
    /// AdvancedModelling
    /// </summary>
    [DataContract]
    public partial class AdvancedModelling : IEquatable<AdvancedModelling>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AdvancedModelling" /> class.
        /// </summary>
        /// <param name="surfaceRoughnessModels">surfaceRoughnessModels.</param>
        /// <param name="porousObjects">porousObjects.</param>
        /// <param name="rotatingWalls">rotatingWalls.</param>
        public AdvancedModelling(List<SurfaceRoughnessModel> surfaceRoughnessModels = default(List<SurfaceRoughnessModel>), List<OneOfAdvancedModellingPorousObjects> porousObjects = default(List<OneOfAdvancedModellingPorousObjects>), List<RotatingWall> rotatingWalls = default(List<RotatingWall>))
        {
            this.SurfaceRoughnessModels = surfaceRoughnessModels;
            this.PorousObjects = porousObjects;
            this.RotatingWalls = rotatingWalls;
        }
        
        /// <summary>
        /// Gets or Sets SurfaceRoughnessModels
        /// </summary>
        [DataMember(Name="surfaceRoughnessModels", EmitDefaultValue=false)]
        public List<SurfaceRoughnessModel> SurfaceRoughnessModels { get; set; }

        /// <summary>
        /// Gets or Sets PorousObjects
        /// </summary>
        [DataMember(Name="porousObjects", EmitDefaultValue=false)]
        public List<OneOfAdvancedModellingPorousObjects> PorousObjects { get; set; }

        /// <summary>
        /// Gets or Sets RotatingWalls
        /// </summary>
        [DataMember(Name="rotatingWalls", EmitDefaultValue=false)]
        public List<RotatingWall> RotatingWalls { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AdvancedModelling {\n");
            sb.Append("  SurfaceRoughnessModels: ").Append(SurfaceRoughnessModels).Append("\n");
            sb.Append("  PorousObjects: ").Append(PorousObjects).Append("\n");
            sb.Append("  RotatingWalls: ").Append(RotatingWalls).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AdvancedModelling);
        }

        /// <summary>
        /// Returns true if AdvancedModelling instances are equal
        /// </summary>
        /// <param name="input">Instance of AdvancedModelling to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AdvancedModelling input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.SurfaceRoughnessModels == input.SurfaceRoughnessModels ||
                    this.SurfaceRoughnessModels != null &&
                    input.SurfaceRoughnessModels != null &&
                    this.SurfaceRoughnessModels.SequenceEqual(input.SurfaceRoughnessModels)
                ) && 
                (
                    this.PorousObjects == input.PorousObjects ||
                    this.PorousObjects != null &&
                    input.PorousObjects != null &&
                    this.PorousObjects.SequenceEqual(input.PorousObjects)
                ) && 
                (
                    this.RotatingWalls == input.RotatingWalls ||
                    this.RotatingWalls != null &&
                    input.RotatingWalls != null &&
                    this.RotatingWalls.SequenceEqual(input.RotatingWalls)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.SurfaceRoughnessModels != null)
                    hashCode = hashCode * 59 + this.SurfaceRoughnessModels.GetHashCode();
                if (this.PorousObjects != null)
                    hashCode = hashCode * 59 + this.PorousObjects.GetHashCode();
                if (this.RotatingWalls != null)
                    hashCode = hashCode * 59 + this.RotatingWalls.GetHashCode();
                return hashCode;
            }
        }

    }

}
