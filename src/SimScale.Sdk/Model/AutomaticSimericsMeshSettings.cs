/* 
 * SimScale API
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using OpenAPIDateConverter = SimScale.Sdk.Client.OpenAPIDateConverter;

namespace SimScale.Sdk.Model
{
    /// <summary>
    /// AutomaticSimericsMeshSettings
    /// </summary>
    [DataContract]
    public partial class AutomaticSimericsMeshSettings : OneOfSimericsAnalysisMeshSettings, IEquatable<AutomaticSimericsMeshSettings>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AutomaticSimericsMeshSettings" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AutomaticSimericsMeshSettings() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AutomaticSimericsMeshSettings" /> class.
        /// </summary>
        /// <param name="type">Schema name: AutomaticSimericsMeshSettings (required) (default to &quot;AUTOMATIC_SETTINGS&quot;).</param>
        /// <param name="refinements">refinements.</param>
        /// <param name="fineness">&lt;p&gt;Adjust the overall mesh sizing from coarse (value: 0) to fine (10).&lt;/p&gt; (default to 1M).</param>
        /// <param name="enableCADSurfaceMerging">&lt;b&gt;Merge CAD surfaces&lt;/b&gt; combines all surfaces of the CAD model that are &lt;i&gt;not&lt;/i&gt; assigned a boundary condition or result control. With this turned on, the probability of successful mesh generation for more complicated geometries significantly increases. If you need to inspect unassigned surfaces separately, turn it off. For more information, please contact Support. (default to true).</param>
        public AutomaticSimericsMeshSettings(string type = "AUTOMATIC_SETTINGS", List<RegionRefinementSimerics> refinements = default(List<RegionRefinementSimerics>), decimal? fineness = default(decimal?), bool? enableCADSurfaceMerging = default(bool?))
        {
            // to ensure "type" is required (not null)
            this.Type = type ?? throw new ArgumentNullException("type is a required property for AutomaticSimericsMeshSettings and cannot be null");
            this.Refinements = refinements;
            this.Fineness = fineness;
            this.EnableCADSurfaceMerging = enableCADSurfaceMerging;
        }
        
        /// <summary>
        /// Schema name: AutomaticSimericsMeshSettings
        /// </summary>
        /// <value>Schema name: AutomaticSimericsMeshSettings</value>
        [DataMember(Name="type", EmitDefaultValue=false)]
        public string Type { get; set; }

        /// <summary>
        /// Gets or Sets Refinements
        /// </summary>
        [DataMember(Name="refinements", EmitDefaultValue=false)]
        public List<RegionRefinementSimerics> Refinements { get; set; }

        /// <summary>
        /// &lt;p&gt;Adjust the overall mesh sizing from coarse (value: 0) to fine (10).&lt;/p&gt;
        /// </summary>
        /// <value>&lt;p&gt;Adjust the overall mesh sizing from coarse (value: 0) to fine (10).&lt;/p&gt;</value>
        [DataMember(Name="fineness", EmitDefaultValue=false)]
        public decimal? Fineness { get; set; }

        /// <summary>
        /// &lt;b&gt;Merge CAD surfaces&lt;/b&gt; combines all surfaces of the CAD model that are &lt;i&gt;not&lt;/i&gt; assigned a boundary condition or result control. With this turned on, the probability of successful mesh generation for more complicated geometries significantly increases. If you need to inspect unassigned surfaces separately, turn it off. For more information, please contact Support.
        /// </summary>
        /// <value>&lt;b&gt;Merge CAD surfaces&lt;/b&gt; combines all surfaces of the CAD model that are &lt;i&gt;not&lt;/i&gt; assigned a boundary condition or result control. With this turned on, the probability of successful mesh generation for more complicated geometries significantly increases. If you need to inspect unassigned surfaces separately, turn it off. For more information, please contact Support.</value>
        [DataMember(Name="enableCADSurfaceMerging", EmitDefaultValue=false)]
        public bool? EnableCADSurfaceMerging { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AutomaticSimericsMeshSettings {\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  Refinements: ").Append(Refinements).Append("\n");
            sb.Append("  Fineness: ").Append(Fineness).Append("\n");
            sb.Append("  EnableCADSurfaceMerging: ").Append(EnableCADSurfaceMerging).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AutomaticSimericsMeshSettings);
        }

        /// <summary>
        /// Returns true if AutomaticSimericsMeshSettings instances are equal
        /// </summary>
        /// <param name="input">Instance of AutomaticSimericsMeshSettings to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AutomaticSimericsMeshSettings input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Type == input.Type ||
                    (this.Type != null &&
                    this.Type.Equals(input.Type))
                ) && 
                (
                    this.Refinements == input.Refinements ||
                    this.Refinements != null &&
                    input.Refinements != null &&
                    this.Refinements.SequenceEqual(input.Refinements)
                ) && 
                (
                    this.Fineness == input.Fineness ||
                    (this.Fineness != null &&
                    this.Fineness.Equals(input.Fineness))
                ) && 
                (
                    this.EnableCADSurfaceMerging == input.EnableCADSurfaceMerging ||
                    (this.EnableCADSurfaceMerging != null &&
                    this.EnableCADSurfaceMerging.Equals(input.EnableCADSurfaceMerging))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Type != null)
                    hashCode = hashCode * 59 + this.Type.GetHashCode();
                if (this.Refinements != null)
                    hashCode = hashCode * 59 + this.Refinements.GetHashCode();
                if (this.Fineness != null)
                    hashCode = hashCode * 59 + this.Fineness.GetHashCode();
                if (this.EnableCADSurfaceMerging != null)
                    hashCode = hashCode * 59 + this.EnableCADSurfaceMerging.GetHashCode();
                return hashCode;
            }
        }

    }

}
