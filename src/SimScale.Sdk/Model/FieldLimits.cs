/* 
 * SimScale API
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using OpenAPIDateConverter = SimScale.Sdk.Client.OpenAPIDateConverter;

namespace SimScale.Sdk.Model
{
    /// <summary>
    /// FieldLimits
    /// </summary>
    [DataContract]
    public partial class FieldLimits : IEquatable<FieldLimits>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FieldLimits" /> class.
        /// </summary>
        /// <param name="lowerDensityBound">lowerDensityBound.</param>
        /// <param name="upperDensityBound">upperDensityBound.</param>
        /// <param name="lowerPressureBound">lowerPressureBound.</param>
        /// <param name="upperPressureBound">upperPressureBound.</param>
        /// <param name="lowerTemperatureBound">lowerTemperatureBound.</param>
        /// <param name="upperTemperatureBound">upperTemperatureBound.</param>
        public FieldLimits(DimensionalDensity lowerDensityBound = default(DimensionalDensity), DimensionalDensity upperDensityBound = default(DimensionalDensity), DimensionalPressure lowerPressureBound = default(DimensionalPressure), DimensionalPressure upperPressureBound = default(DimensionalPressure), DimensionalTemperature lowerTemperatureBound = default(DimensionalTemperature), DimensionalTemperature upperTemperatureBound = default(DimensionalTemperature))
        {
            this.LowerDensityBound = lowerDensityBound;
            this.UpperDensityBound = upperDensityBound;
            this.LowerPressureBound = lowerPressureBound;
            this.UpperPressureBound = upperPressureBound;
            this.LowerTemperatureBound = lowerTemperatureBound;
            this.UpperTemperatureBound = upperTemperatureBound;
        }
        
        /// <summary>
        /// Gets or Sets LowerDensityBound
        /// </summary>
        [DataMember(Name="lowerDensityBound", EmitDefaultValue=false)]
        public DimensionalDensity LowerDensityBound { get; set; }

        /// <summary>
        /// Gets or Sets UpperDensityBound
        /// </summary>
        [DataMember(Name="upperDensityBound", EmitDefaultValue=false)]
        public DimensionalDensity UpperDensityBound { get; set; }

        /// <summary>
        /// Gets or Sets LowerPressureBound
        /// </summary>
        [DataMember(Name="lowerPressureBound", EmitDefaultValue=false)]
        public DimensionalPressure LowerPressureBound { get; set; }

        /// <summary>
        /// Gets or Sets UpperPressureBound
        /// </summary>
        [DataMember(Name="upperPressureBound", EmitDefaultValue=false)]
        public DimensionalPressure UpperPressureBound { get; set; }

        /// <summary>
        /// Gets or Sets LowerTemperatureBound
        /// </summary>
        [DataMember(Name="lowerTemperatureBound", EmitDefaultValue=false)]
        public DimensionalTemperature LowerTemperatureBound { get; set; }

        /// <summary>
        /// Gets or Sets UpperTemperatureBound
        /// </summary>
        [DataMember(Name="upperTemperatureBound", EmitDefaultValue=false)]
        public DimensionalTemperature UpperTemperatureBound { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class FieldLimits {\n");
            sb.Append("  LowerDensityBound: ").Append(LowerDensityBound).Append("\n");
            sb.Append("  UpperDensityBound: ").Append(UpperDensityBound).Append("\n");
            sb.Append("  LowerPressureBound: ").Append(LowerPressureBound).Append("\n");
            sb.Append("  UpperPressureBound: ").Append(UpperPressureBound).Append("\n");
            sb.Append("  LowerTemperatureBound: ").Append(LowerTemperatureBound).Append("\n");
            sb.Append("  UpperTemperatureBound: ").Append(UpperTemperatureBound).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as FieldLimits);
        }

        /// <summary>
        /// Returns true if FieldLimits instances are equal
        /// </summary>
        /// <param name="input">Instance of FieldLimits to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(FieldLimits input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.LowerDensityBound == input.LowerDensityBound ||
                    (this.LowerDensityBound != null &&
                    this.LowerDensityBound.Equals(input.LowerDensityBound))
                ) && 
                (
                    this.UpperDensityBound == input.UpperDensityBound ||
                    (this.UpperDensityBound != null &&
                    this.UpperDensityBound.Equals(input.UpperDensityBound))
                ) && 
                (
                    this.LowerPressureBound == input.LowerPressureBound ||
                    (this.LowerPressureBound != null &&
                    this.LowerPressureBound.Equals(input.LowerPressureBound))
                ) && 
                (
                    this.UpperPressureBound == input.UpperPressureBound ||
                    (this.UpperPressureBound != null &&
                    this.UpperPressureBound.Equals(input.UpperPressureBound))
                ) && 
                (
                    this.LowerTemperatureBound == input.LowerTemperatureBound ||
                    (this.LowerTemperatureBound != null &&
                    this.LowerTemperatureBound.Equals(input.LowerTemperatureBound))
                ) && 
                (
                    this.UpperTemperatureBound == input.UpperTemperatureBound ||
                    (this.UpperTemperatureBound != null &&
                    this.UpperTemperatureBound.Equals(input.UpperTemperatureBound))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.LowerDensityBound != null)
                    hashCode = hashCode * 59 + this.LowerDensityBound.GetHashCode();
                if (this.UpperDensityBound != null)
                    hashCode = hashCode * 59 + this.UpperDensityBound.GetHashCode();
                if (this.LowerPressureBound != null)
                    hashCode = hashCode * 59 + this.LowerPressureBound.GetHashCode();
                if (this.UpperPressureBound != null)
                    hashCode = hashCode * 59 + this.UpperPressureBound.GetHashCode();
                if (this.LowerTemperatureBound != null)
                    hashCode = hashCode * 59 + this.LowerTemperatureBound.GetHashCode();
                if (this.UpperTemperatureBound != null)
                    hashCode = hashCode * 59 + this.UpperTemperatureBound.GetHashCode();
                return hashCode;
            }
        }

    }

}
