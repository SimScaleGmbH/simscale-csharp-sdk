/* 
 * SimScale API
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using OpenAPIDateConverter = SimScale.Sdk.Client.OpenAPIDateConverter;

namespace SimScale.Sdk.Model
{
    /// <summary>
    /// Hyperelasticity
    /// </summary>
    [DataContract]
    public partial class Hyperelasticity : IEquatable<Hyperelasticity>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Hyperelasticity" /> class.
        /// </summary>
        /// <param name="hyperelasticModelMarc">hyperelasticModelMarc.</param>
        public Hyperelasticity(OneOfHyperelasticityHyperelasticModelMarc hyperelasticModelMarc = default(OneOfHyperelasticityHyperelasticModelMarc))
        {
            this.HyperelasticModelMarc = hyperelasticModelMarc;
        }
        
        /// <summary>
        /// Gets or Sets HyperelasticModelMarc
        /// </summary>
        [DataMember(Name="hyperelasticModelMarc", EmitDefaultValue=false)]
        public OneOfHyperelasticityHyperelasticModelMarc HyperelasticModelMarc { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Hyperelasticity {\n");
            sb.Append("  HyperelasticModelMarc: ").Append(HyperelasticModelMarc).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Hyperelasticity);
        }

        /// <summary>
        /// Returns true if Hyperelasticity instances are equal
        /// </summary>
        /// <param name="input">Instance of Hyperelasticity to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Hyperelasticity input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.HyperelasticModelMarc == input.HyperelasticModelMarc ||
                    (this.HyperelasticModelMarc != null &&
                    this.HyperelasticModelMarc.Equals(input.HyperelasticModelMarc))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.HyperelasticModelMarc != null)
                    hashCode = hashCode * 59 + this.HyperelasticModelMarc.GetHashCode();
                return hashCode;
            }
        }

    }

}
