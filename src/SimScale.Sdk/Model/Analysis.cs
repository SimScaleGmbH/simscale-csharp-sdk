/* 
 * SimScale API
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using JsonSubTypes;
using OpenAPIDateConverter = SimScale.Sdk.Client.OpenAPIDateConverter;

namespace SimScale.Sdk.Model
{
    /// <summary>
    /// Analysis
    /// </summary>
    [JsonConverter(typeof(JsonSubtypes), "Type")]
    [JsonSubtypes.KnownSubType(typeof(StaticAnalysis), "STATIC_ANALYSIS")]
    [JsonSubtypes.KnownSubType(typeof(DynamicAnalysis), "DYNAMIC_ANALYSIS")]
    [JsonSubtypes.KnownSubType(typeof(HeatTransfer), "HEAT_TRANSFER")]
    [JsonSubtypes.KnownSubType(typeof(ThermalMechanical), "THERMAL_MECHANICAL")]
    [JsonSubtypes.KnownSubType(typeof(Incompressible), "INCOMPRESSIBLE")]
    [JsonSubtypes.KnownSubType(typeof(IncompressiblePacefish), "INCOMPRESSIBLE_PACEFISH")]
    [JsonSubtypes.KnownSubType(typeof(SimericsAnalysis), "SIMERICS_ANALYSIS")]
    [JsonSubtypes.KnownSubType(typeof(WindComfort), "WIND_COMFORT")]
    [JsonSubtypes.KnownSubType(typeof(Compressible), "COMPRESSIBLE")]
    [JsonSubtypes.KnownSubType(typeof(ConvectiveHeatTransfer), "CONVECTIVE_HEAT_TRANSFER")]
    [JsonSubtypes.KnownSubType(typeof(CoupledConjugateHeatTransfer), "COUPLED_CONJUGATE_HEAT_TRANSFER")]
    [JsonSubtypes.KnownSubType(typeof(EmbeddedBoundary), "EMBEDDED_BOUNDARY")]
    [JsonSubtypes.KnownSubType(typeof(Multiphase), "MULTIPHASE")]
    [JsonSubtypes.KnownSubType(typeof(ConjugateHeatTransfer), "CONJUGATE_HEAT_TRANSFER")]
    [JsonSubtypes.KnownSubType(typeof(HarmonicAnalysis), "HARMONIC_ANALYSIS")]
    [JsonSubtypes.KnownSubType(typeof(FrequencyAnalysis), "FREQUENCY_ANALYSIS")]
    [JsonSubtypes.KnownSubType(typeof(ElectromagneticAnalysis), "ELECTROMAGNETIC_ANALYSIS")]
    public interface Analysis
    {
        /// <summary>
        /// Gets Type
        /// </summary>
        string Type { get; }
    }
}
